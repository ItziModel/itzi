name: release

on: workflow_dispatch

jobs:
  setup_and_build:
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    runs-on: ubuntu-latest
    outputs:
      itzi_version: ${{ steps.version.outputs.itzi_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y clang build-essential libomp-dev

      - name: Install PDM and uv
        run: |
            curl -sSLO https://pdm-project.org/install-pdm.py
            curl -sSL https://pdm-project.org/install-pdm.py.sha256 | shasum -a 256 -c -
            sudo python3 install-pdm.py --path /usr/local
            curl -LsSf https://astral.sh/uv/install.sh | sh
            pdm config use_uv true

      - name: Build and install
        run: |
            pdm install
            pdm build

      - name: Get version
        id: version
        run: |
          echo "itzi_version=$(pdm show --version)" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/


  pypi_publish:
    name: Upload release to PyPI
    needs: [setup_and_build]
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      # In order to use Trusted Publisher
      id-token: write
      contents: read

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: True

      - name: Publish distribution to PyPI
        uses:  pypa/gh-action-pypi-publish@release/v1


  github_release:
    name: Create GitHub Release
    needs: [setup_and_build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist/
          merge-multiple: True

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ needs.setup_and_build.outputs.itzi_version }}
          release_name: ${{ needs.setup_and_build.outputs.itzi_version }}
          body: "Release of version ${{ needs.setup_and_build.outputs.itzi_version }}"
