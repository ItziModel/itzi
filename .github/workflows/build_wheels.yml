name: Build

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is intel, macos-14 is apple silicon, windows-11-arm
        # os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-14]
        os: [macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Set-up on MacOS
        if: ${{ matrix.os == 'macos-14' }}
        run: |
          brew install libomp

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.2
        env:
          CIBW_ARCHS: auto64  # Don't build 32 bits wheels
          CIBW_SKIP: pp*  # Don't build pypy wheels
          CIBW_ENVIRONMENT: "ITZI_BDIST_WHEEL=1"
          CIBW_ENVIRONMENT_MACOS: >
            MACOSX_DEPLOYMENT_TARGET=14.0
            ITZI_BDIST_WHEEL=1
          CIBW_BEFORE_TEST: "pip install pytest pandas"
          CIBW_TEST_SOURCES: tests
          CIBW_TEST_COMMAND: >
            pytest {package}/tests/test_flow.py {package}/tests/test_analytic.py {package}/tests/test_rastermetrics.py

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   environment: release
  #   permissions:
  #     id-token: write
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         # unpacks all CIBW artifacts into dist/
  #         pattern: cibw-*
  #         path: dist
  #         merge-multiple: true

  #     - uses: pypa/gh-action-pypi-publish@release/v1
